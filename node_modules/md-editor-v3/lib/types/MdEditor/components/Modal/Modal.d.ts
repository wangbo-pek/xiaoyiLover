import { PropType, ExtractPropTypes, CSSProperties } from 'vue';

declare const _default: import('vue').DefineComponent<{
    title: {
        type: PropType<string>;
        default: string;
    };
    visible: {
        type: PropType<boolean>;
        default: boolean;
    };
    width: {
        type: PropType<string>;
        default: string;
    };
    height: {
        type: PropType<string>;
        default: string;
    };
    onClose: {
        type: PropType<() => void>;
    };
    showAdjust: {
        type: PropType<boolean>;
        default: boolean;
    };
    isFullscreen: {
        type: PropType<boolean>;
        default: boolean;
    };
    onAdjust: {
        type: PropType<(val: boolean) => void>;
        default: () => void;
    };
    class: {
        type: PropType<string>;
    };
    style: {
        type: PropType<CSSProperties>;
        default: () => {};
    };
}, () => "" | import("vue/jsx-runtime").JSX.Element, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, "onClose"[], "onClose", import('vue').PublicProps, Readonly<ExtractPropTypes<{
    title: {
        type: PropType<string>;
        default: string;
    };
    visible: {
        type: PropType<boolean>;
        default: boolean;
    };
    width: {
        type: PropType<string>;
        default: string;
    };
    height: {
        type: PropType<string>;
        default: string;
    };
    onClose: {
        type: PropType<() => void>;
    };
    showAdjust: {
        type: PropType<boolean>;
        default: boolean;
    };
    isFullscreen: {
        type: PropType<boolean>;
        default: boolean;
    };
    onAdjust: {
        type: PropType<(val: boolean) => void>;
        default: () => void;
    };
    class: {
        type: PropType<string>;
    };
    style: {
        type: PropType<CSSProperties>;
        default: () => {};
    };
}>> & {
    onOnClose?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    style: CSSProperties;
    visible: boolean;
    height: string;
    width: string;
    showAdjust: boolean;
    isFullscreen: boolean;
    onAdjust: (val: boolean) => void;
}, {}>;
export default _default;
