import { TocItem } from './MdCatalog';
import { MdHeadingId } from '../MdEditor/type';
import { LooseRequired } from '@vue/shared';
import { PropType, ExtractPropTypes } from 'vue';

declare const props: {
    tocItem: {
        type: PropType<TocItem>;
        default: () => {};
    };
    mdHeadingId: {
        type: PropType<MdHeadingId>;
        default: () => void;
    };
    scrollElement: {
        type: PropType<string | Element>;
        default: string;
    };
    onClick: {
        type: PropType<(e: MouseEvent, t: TocItem) => void>;
        default: () => void;
    };
    scrollElementOffsetTop: {
        type: PropType<number>;
        default: number;
    };
};
export type CatalogLinkProps = Readonly<LooseRequired<Readonly<ExtractPropTypes<typeof props>>>>;
declare const CatalogLink: import('vue').DefineComponent<{
    tocItem: {
        type: PropType<TocItem>;
        default: () => {};
    };
    mdHeadingId: {
        type: PropType<MdHeadingId>;
        default: () => void;
    };
    scrollElement: {
        type: PropType<string | Element>;
        default: string;
    };
    onClick: {
        type: PropType<(e: MouseEvent, t: TocItem) => void>;
        default: () => void;
    };
    scrollElementOffsetTop: {
        type: PropType<number>;
        default: number;
    };
}, () => import("vue/jsx-runtime").JSX.Element, unknown, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<ExtractPropTypes<{
    tocItem: {
        type: PropType<TocItem>;
        default: () => {};
    };
    mdHeadingId: {
        type: PropType<MdHeadingId>;
        default: () => void;
    };
    scrollElement: {
        type: PropType<string | Element>;
        default: string;
    };
    onClick: {
        type: PropType<(e: MouseEvent, t: TocItem) => void>;
        default: () => void;
    };
    scrollElementOffsetTop: {
        type: PropType<number>;
        default: number;
    };
}>>, {
    onClick: (e: MouseEvent, t: TocItem) => void;
    mdHeadingId: MdHeadingId;
    tocItem: TocItem;
    scrollElement: string | Element;
    scrollElementOffsetTop: number;
}, {}>;
export default CatalogLink;
